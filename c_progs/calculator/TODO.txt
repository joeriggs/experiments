
================== C Implementation of Prototype Calculator. ==================

- Basic implementation:

- Bugs:
  - Exponentiation is broken due to:
    - Rounding problems.
  - Switching between BCD and HEX is broken.
    - Hex needs testing.  Hasn't been tested since BCD was added.

- Enhanced implementation:
  - Exponentiation.
    - Add bcd_is_whole_number().
    - Add bcd_is_zero().
  - Parentheses:
    - Balance checking.
  - Hex operators:
    - Modulus
    - Shift Left
    - Shift Right
    - Rotate Left
    - Rotate Right
  - Parser to make sure equation is valid.
  - calculator class mode that processes the equation in real time:
    - Configurable by the user.
      - Change cmdline UI to have a 'p' ('p' is for processing) switch.
      - calculator::set_processing_mode() method.
    - Parse the infix each time we get an operator.
    - Change calculator class to return the top of the operand stack each
      time we get a new operator.
  - Change operand class to support configurable word size.
    - HEX mode only.  Disabled in decimal mode.
    - operand::operand_set_word_size(int size) (8, 16, 32, 64, 128).
    - operand::operand_add_char() uses word size.
    - Add a status indicator as "-- hex -- 8-bit -->  <--" to console.
  - Should we disable 's' in Hex mode?  Or should we create a signed/unsigned
    option for Hex mode?

- Cleanup, refactoring, and beautification:
  - Change classes so you can say "stack this" instead of "stack *this".
  - Change raw_stdin class to "console" class.
    - Add the stderr display stuff as a method.
    - Add signal handler for CTRL-C.

- Unit Testing:
  - Create extremely robust TDD-style tests for each class.

- System Testing:
  - Run a memory leak tool to check for leaks.  For example:
    - Check to make sure we're deleting the operator and operand objects when
      we're done with them in postfix.  Probably need to write a loop test that
      will run overnight and check for memory leaks.  An alternative would be
      to use a tool that looks for memory leaks.
  - Multi-platform testing.
    - Look into using Vagrant or Docker to create additional test beds.
    - Windows testing?
    - MacOS testing?
  - Connect to Codeship.

=============== End of C Implementation of Prototype Calculator. ==============

